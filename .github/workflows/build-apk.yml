name: Build Flutter APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

# CRITICAL: Add permissions for releases
permissions:
  contents: write
  packages: write
  actions: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'  # Use Java 17, NOT 8

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'  # Use stable version, NOT latest
        channel: 'stable'

    - name: Get dependencies
      run: flutter pub get

    - name: Run build_runner for Hive adapters
      run: flutter packages pub run build_runner build --delete-conflicting-outputs

    - name: Analyze code
      run: flutter analyze || true

    - name: Run tests
      run: flutter test || true

    - name: Clean build cache
      run: flutter clean

    - name: Get dependencies again
      run: flutter pub get

    - name: Run build_runner again after clean
      run: flutter packages pub run build_runner build --delete-conflicting-outputs

    # CRITICAL: Setup Gradle for CI
    - name: Setup Gradle properties
      run: |
        mkdir -p ~/.gradle
        echo "org.gradle.daemon=false" >> ~/.gradle/gradle.properties
        echo "org.gradle.parallel=false" >> ~/.gradle/gradle.properties
        echo "org.gradle.configureondemand=false" >> ~/.gradle/gradle.properties
        echo "org.gradle.jvmargs=-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8" >> ~/.gradle/gradle.properties

    # Build with retry logic
    - name: Build APK with retry
      run: |
        for i in {1..3}; do
          echo "Build attempt $i"
          if flutter build apk --release --no-tree-shake-icons; then
            echo "Build successful on attempt $i"
            break
          else
            echo "Build failed on attempt $i"
            if [ $i -eq 3 ]; then
              echo "All build attempts failed"
              exit 1
            fi
            echo "Cleaning and retrying..."
            flutter clean
            flutter pub get
            flutter packages pub run build_runner build --delete-conflicting-outputs
            sleep 10
          fi
        done

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: reminder-app-apk
        path: build/app/outputs/flutter-apk/app-release.apk

    - name: Rename APK for release
      run: cp build/app/outputs/flutter-apk/app-release.apk reminder-app-release.apk

    - name: Create Release
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v1.0.${{ github.run_number }}
        name: Reminder App v1.0.${{ github.run_number }}
        body: |
          üîî **Reminder App - Call Screen Style Reminders**
          üì± Download the APK below and install on your Android device
          
          **Features:**
          ‚úÖ Call-screen style reminder notifications
          ‚úÖ Local storage with Hive
          ‚úÖ Repeat reminders (daily, weekly, monthly, yearly)
          ‚úÖ Important reminder marking
          ‚úÖ Snooze functionality
          ‚úÖ Modern Material 3 UI
          ‚úÖ Permission handling for Android 13+
          
          **Installation:**
          1. Download `reminder-app-release.apk`
          2. Enable "Install from unknown sources" in Android settings
          3. Install the APK
          4. Grant notification permissions when prompted
          
          ‚ö†Ô∏è **Note:** Enable "Install from unknown sources" in Android settings before installation
        files: reminder-app-release.apk
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }} 